[tool.poetry]
name = "figma-files"
version = "0.1.0"
description = "Python SDK for Figma Files API"
authors = ["thinkeloquent"]
readme = "README.md"
license = "MIT"
packages = [{include = "figma_files", from = "src"}]
keywords = ["api", "sdk", "client", "figma", "files"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Typing :: Typed",
]

[tool.poetry.dependencies]
python = ">=3.9,<3.12"
httpx = "^0.27.0"
pydantic = "^2.7.0"
typer = {version = "^0.12.0", extras = ["all"]}
rich = "^13.7.0"
fastapi = "^0.110.0"
uvicorn = {version = "^0.29.0", extras = ["standard"]}

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.0"
pytest-asyncio = "^0.23.0"
pytest-cov = "^5.0.0"
pytest-mock = "^3.14.0"
mypy = "^1.8.0"
ruff = "^0.3.0"
pre-commit = "^3.6.0"

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.5.0"
mkdocs-material = "^9.5.0"
mkdocstrings = {version = "^0.24.0", extras = ["python"]}

[tool.poetry.scripts]
figma-files = "figma_files.cli:app"

[tool.ruff]
line-length = 100
target-version = "py39"
fix = true
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG", # flake8-unused-arguments
    "SIM", # flake8-simplify
]
ignore = [
    "E501",  # line too long (handled by formatter)
    "B008",  # do not perform function calls in argument defaults
]

[tool.ruff.isort]
known-first-party = ["figma_files"]

[tool.mypy]
python_version = "3.9"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
plugins = ["pydantic.mypy"]

[tool.pytest.ini_options]
minversion = "8.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--cov=figma_files",
    "--cov-report=term-missing",
    "--cov-report=html",
]
testpaths = ["tests"]
pythonpath = ["src"]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*", "*/__init__.py"]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"