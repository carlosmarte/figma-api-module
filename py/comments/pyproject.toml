[tool.poetry]
name = "figma-comments"
version = "0.1.0"
description = "A comprehensive Figma Comments API integration library"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
license = "MIT"
homepage = "https://github.com/your-org/figma-comments"
repository = "https://github.com/your-org/figma-comments"
documentation = "https://figma-comments.readthedocs.io"
keywords = ["figma", "api", "comments", "design", "collaboration"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Multimedia :: Graphics :: Graphics Conversion",
]
packages = [{include = "figma_comments", from = "src"}]

[tool.poetry.dependencies]
python = "^3.8"
httpx = "^0.27.0"
pydantic = "^2.7.0"
tenacity = "^8.2.3"
typer = {version = "^0.12.0", extras = ["all"]}
rich = "^13.7.0"
fastapi = "^0.110.0"
uvicorn = {version = "^0.29.0", extras = ["standard"]}
aiocache = "^0.12.2"

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.0"
pytest-asyncio = "^0.23.0"
pytest-cov = "^5.0.0"
pytest-mock = "^3.14.0"
mypy = "^1.8.0"
ruff = "^0.3.0"
black = "^24.0.0"
sphinx = "^7.0.0"
sphinx-autodoc-typehints = "^2.0.0"

[tool.poetry.scripts]
figma-comments = "figma_comments.interfaces.cli:app"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 100
target-version = "py38"
select = ["E", "F", "W", "I", "N", "UP", "YTT", "S", "BLE", "FBT", "B", "A", "COM", "C4", "DTZ", "T10", "EM", "EXE", "ISC", "ICN", "G", "INP", "PIE", "T20", "PYI", "PT", "Q", "RSE", "RET", "SLF", "SIM", "TID", "TCH", "ARG", "PTH", "ERA", "PD", "PGH", "PL", "TRY", "NPY", "RUF"]
ignore = ["E501", "S101", "B008", "B904", "RET504", "PLR0913"]

[tool.black]
line-length = 100
target-version = ['py38']

[tool.mypy]
python_version = "3.8"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
plugins = ["pydantic.mypy"]

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_paths = ["src"]
addopts = "--cov=figma_comments --cov-report=term-missing --cov-report=html"

[tool.coverage.run]
source = ["src/figma_comments"]
omit = ["tests/*", "src/figma_comments/__init__.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]